* react-speak

Stupid-simple, extensible React HOC for interop with the [[https://w3c.github.io/speech-api/speechapi.html][Web Speech]] API.

** Dependencies:
- React 15.X
- PropTypes (looking to make optional)

** Install
To install simply run:
=$ npm install react-speak --save=

or:

=$ yarn add react-speak=




withSpeech Required Props: 

@startListening = (Action Creator :: () -> {type, ...meta})
                    -> Action Object (no payload)

@stopListening  = (Action Creator :: () -> {type, ...meta})
                    -> Action Object (no payload)

@addToRegister  = (Action Creator :: Array(String) -> {type, ...meta, payload : Array(String)})
                       -> Action Object (with payload)
   
`startListening` and `stopListening` are similar in that they 
don't receive any particular payload from the withSpeech
component; the action object they return can be as simple as:

    > const startListening = () => ({ type: WHAT_YOUR_REDUCERS_WILL_LISTEN_FOR })

`addToRegister` is different in that the action creator implicitly
receives (from withSpeech) a "register", which is an array of strings
that you can assign to a `data` or `payload` property on your action.

**Note: Currently this only officially supports a Redux or Flux-type model where
        you have reducers that listen for the actions that withSpeech returns,
  and manages the logic for how this component actually mutates state.
 
**Note: PRs that abstract this component's functionality to React in general are
        absolutely welcome!
        
